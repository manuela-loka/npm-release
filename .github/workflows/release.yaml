name: Release
on:
  push:
    branches:
      - main

env:
  NODE_VERSION: "20"

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm clean-install

      - name: Retrieve previous version and build number
        id: get-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_VERSION=$(npx semantic-release --dry-run | grep -oP "(?<=The next release version is )\S*")
          # NEW_VERSION=$(npx semantic-release --dry-run | grep -oP "(?<=The next release version is ).*") || NEW_VERSION=""
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          echo $NEW_VERSION
        continue-on-error: true

      - run: echo "the version is ${{ env.new_version }}"

      - name: Check version retrieval
        if: ${{ env.new_version == '' }}
        run: echo "Version retrieval failed. Performing X action."

      - name: Process retrieved version
        if: ${{ env.new_version != '' }}
        run: echo "Version retrieval succeeded. Performing Y actions with version ${{ env.new_version }}."

      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npx semantic-release -tag-format v${version}+
