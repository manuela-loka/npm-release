name: Release
on:
  push:
    branches:
      - main

env:
  NODE_VERSION: "20"

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm clean-install

      - name: Retrieve previous version and build number
        id: get-version
        run: |
          # Use `semantic-release` to get the latest version
          npx semantic-release --dry-run | grep -oP "(?<=The next release version is ).*"
          latest_version=$(npx semantic-release --dry-run | grep -oP "(?<=The next release version is ).*")
          # Check if the latest version is stored
          if [ -f .build_number ]; then
            build_number=$(cat .build_number)
          else
            build_number=0
          fi
          # Check if version has changed
          if [ "$latest_version" != "$(git describe --tags --abbrev=0)" ]; then
            build_number=0
          fi
          # Increment and save build number
          build_number=$((build_number + 1))
          echo "$build_number" > .build_number
          # Export version with build number
          echo "VERSION=${latest_version}+${build_number}" >> $GITHUB_ENV

      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npx semantic-release -tag-format v${version}+
